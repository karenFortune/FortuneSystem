@model FortuneSystem.Models.POSummary.POSummary

@{
    ViewBag.Title = "CrearItems";

}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<link rel="stylesheet" href="~/Content/alertifyjs/css/alertify.min.css" />
<link rel="stylesheet" href="~/Content/alertifyjs/css/themes/default.min.css" />
<link href="~/Content/select2-4.0.5/dist/css/select2.min.css" rel="stylesheet" />
<script src="~/Content/alertifyjs/alertify.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
<script language="javascript" type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.10.0/jquery.validate.min.js"></script>
<script src="~/Scripts/general/autocomplete.js"></script>
<script src="~/Scripts/general/AgregarTallas.js"></script>
<script src="~/Scripts/general/agregarNuevoColoryEstilo.js"></script>

<link href="@Url.Content("~/Content/themes/base/jquery-ui.min.css")" rel="stylesheet" />
@Scripts.Render("~/Content/jquery-ui-1.12.1.custom/jquery-3.3.1.min.js")

<script type="text/javascript">


    $(document).ready(function () {
        $("#f-talla").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/POSummary/Autocomplete_Talla",
                    type: "POST",
                    dataType: "json",
                    data: { keyword: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.Talla,
                                value: item.Talla
                            };
                        }))
                    },
                    error: function () {

                    }
                })
            },
            minLength: 2
        });


        $("#ItemDescripcion_ItemEstilo,#CatColores_CodigoColor").on('input', function () {
            var val = this.value;
            this.value = val.replace(/[^A-Z\u00f1\u00d1\u0020\s\^0-9]/g, '');
        });
        $("#Cantidad").on('input', function () {
            var val = this.value;
            this.value = val.replace(/^[0-9]\./g, '');
        });     
       
        $("#crearTallas").hide();
        $('#nuevoItem').click(function (e) {
            var error = 0;
            $(".nuevo_item").each(function () {
                error;
                var id = $(this).attr('id');
                if ($(this).val() == '') {
                    $("#" + id).css('border', '2px solid #e03f3f');
                    error++;

                } else {
                    $("#" + id).css('border', '1px solid #cccccc');
                }

            });            
            if (error != 0) {
                var alert = alertify.alert("Mensaje", 'Todos los campos son requeridos.').set('label', 'Aceptar');
                alert.set({ transition: 'zoom' });
                alert.set('modal', false); 
            } else {
                $("#nuevoItem").prop("disabled", true);
                $("#crearTallas").show();
                var EstiloItem = $("#ItemDescripcion_ItemEstilo").val();
                var IdColor = $("#CatColores_CodigoColor").val();
                var Cantidad = $("#Cantidad").val();
                var Precio = $("#Precio").val();
                var IdGenero = $("#selectGenero option:selected").val();
                var IdTela = $("#selectTela option:selected").val();
                var TipoCamiseta = $("#selectTipoCamiseta option:selected").val();
                $.ajax('@Url.Action("RegistrarItem", "POSummary")', {
                    data: { EstiloItem: EstiloItem, IdColor: IdColor, Cantidad: Cantidad, Precio: Precio, IdGenero: IdGenero, TipoCamiseta: TipoCamiseta, IdTela: IdTela },
                method: 'get',
                async: true,
                success: function (data) {
                   
                },
            }).done(function(data) {
               
                    });

                alertify.notify('Se registro correctamente el Estilo.', 'success', 10, null);
            }

                 
        });

        var colorDesc = $("#CatColores_DescripcionColor").val();
        var colorEstilo = $("#CatColores_CodigoColor").val();

        $(function () {
            $('#selectGenero').change(function () {
                var text = $(this).find('option:selected').text();
                $.ajax('@Url.Action("List", "POSummary")', {
                data: { Genero: text},
                    method: 'GET',
                    success: function (result) {
                        var html = '';
                        html +='<table class="table" id="tablaTallas"><thead>' +
                            '  <tr>' +

                            '<th>Talla</th>' +
                            ' <th>Cantidad</th>' +
                            ' <th>Extras</th>' +
                            ' <th>Ejemplos</th>' +
                            '</tr>'+
                            '</thead><tbody>';
                        $.each(result, function (key, item) {
                            html += '<tr>';
                            html += '<td><input type="text" name="f-talla" id="f-talla" class="form-control f-name01 " value="' + item.CatTallaItem.Talla + '"/></td>';
                            html += '<td><input type="text" name="l-cantidad" id="l-cantidad" class="form-control l-name01 "  /></td>';
                            html += '<td><input type="text" name="e-extras" id="e-extras" class="form-control e-name01 " /></td>';
                            html += '<td><input type="text" name="s-ejemplo" id="s-ejemplo" class="form-control s-name01 " /></td>';
                            html += '<td><button type="button" id="btnDelete" class="deleteTalla btn btn btn-danger btn-xs" value="4">Eliminar</button></td>';
                            html += '</tr>';

                        });
                        html += '</tbody> </table>';
                        $('#listaTalla').html(html);
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    },
            }).done(function(data) {

            });
            });
        });

        var exists = false;

  
    });

    function buscarTipoCamiseta(tipoProd) {
        $('#selectTipoCamiseta option').each(function (i, e) {
            if (this.value == tipoProd) {
                    $(this).attr('selected', 'selected');
                $(this).val(tipoProd).change();

                }
            });
    }

    function buscarGenero(genero) {
        $('#selectGenero option').each(function (i, e) {
            if (this.value == genero) {
                $(this).attr('selected', 'selected');
                $(this).val(genero).change();

            }
        });
    }

    function validarEstilo(estilo) {
        const re = /^([A-Z]{4})([0-9A-Z]{3})([A-Z]{1})([A-Z]{2})/;
        var validar = estilo.match(re);
        if (validar != null) {
            var licencia = validar[1];
            var genero = validar[3];
            var tipoProd = validar[4];
        }        
        var numero;
        if (!validar) {
            numero = 0;
            return numero;
        } else {
            numero = 1;
            buscarTipoCamiseta(tipoProd);
            buscarGenero(genero);
            return numero;

        }


    }



    function InputToUpper(obj) {
        if (obj.value != "") {
            obj.value = obj.value.toUpperCase();
        }
    }

    $(document).ready(function () {
        $('#nuevaTalla').on('click', function () {
            var r = 0; var c = 0; var i = 0; var cadena = new Array(4);
            cadena[0] = ''; cadena[1] = ''; cadena[2] = ''; cadena[3] = '';
            var nFilas = $("#tablaTallas tbody>tr").length;
            var nColumnas = $("#tablaTallas tr:last td").length;
            $('#tablaTallas tbody>tr').each(function () {
                r = 0;
                c = 0;    
                var error = 0;
                $(this).find("input").each(function () {
                    $(this).closest('td').find("input").each(function () {
                        cadena[c] += this.value + "*" ;
                                          
                       /* error;
                        var id = $(this).attr('id');
                        if (this.value == '') {
                            $("#" + id).css('border', '2px solid #e03f3f');
                            error++;
                        } else {
                            $("#" + id).css('border', '1px solid #cccccc');
                        }*/

                        c++;     
                    });
                    
                    r++;
                    });
                });
            debugger
            var error = 0;
            $('#tablaTallas').find('td').each(function (i, el) {
               
                var valor = $(el).children().val();
                    if ($(el).children().val() == '') {
                        error++;
                        $(el).children().css('border', '2px solid #e03f3f');
                      
                    } else {
                        $(el).children().css('border', '1px solid #cccccc');
                        
                    }
               
            });       
    
            enviarListaTalla(cadena, error);
        });
    });

    function enviarListaTalla(cadena, error) { 
        debugger
 
        if (error != 0) {
           alertify.notify('Todos los campos son requeridos.', 'error', 10, null);
        } else {
            $.ajax({
                url: "/POSummary/Obtener_Lista_Tallas",
                datatType: 'json',
                data: JSON.stringify({ ListTalla: cadena }),
                cache: false,
                type: 'POST',
                contentType: 'application/json',
                success: function (data) {
                    alertify.notify('Se registro correctamente las tallas.', 'success', 10, null);
                    var confirm = alertify.confirm('Confirmacion', 'Desea registrar un nuevo Estilo?', null, null).set('labels', { ok: 'Aceptar', cancel: 'Cancelar' });

                    confirm.set({ transition: 'slide' });

                    confirm.set('onok', function () { //callbak al pulsar botón positivo
                        $("#crearTallas").hide();
                        $('#nuevoItem').prop("disabled", false);
                        limpiarFormItems();
                        alertify.success('Has confirmado');
                    });

                    confirm.set('oncancel', function () { //callbak al pulsar botón negativo
                        alertify.error('Se finalizo el registro de la orden de compra.');
                        window.location = '/pedidos/Index';

                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    showError(xhr.status, xhr.responseText);
                    if (data.error == 1) {
                        alertify.notify('Verificar.', 'error', 10, null);
                    }
                }
            });
        }
        
    }

    function limpiarFormItems() {
        $('#ItemDescripcion_ItemEstilo').val('');
        $('#ItemDescripcion_Descripcion').val('');
        $('#CatColores_CodigoColor').val('');
        $('#CatColores_DescripcionColor').val('');
        $('#Cantidad').val('');
        $('#Precio').val('');
        //$('#selectGenero').empty();
        //$('#selectTela').empty();
        //$('#selectTipoCamiseta').empty();
        $("#nuevoColor").prop("disabled", false);
        $("#nuevoEstilo").prop("disabled", false);
    }
</script>

<style>

 
 

</style>

<h2></h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formItems" }))
{
    @Html.AntiForgeryToken()


<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdItems)
    @Html.HiddenFor(model => model.IdColor)
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>Recepci&oacute;n de Items</h4>
        </div>
        <div class="container-fluid">
            <div class="form-row ">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ItemDescripcion.ItemEstilo, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ItemDescripcion.ItemEstilo, new { htmlAttributes = new { @class = "form-control nuevo_item", @onkeyup = "InputToUpper(this);" } })
                    @Html.ValidationMessageFor(model => model.ItemDescripcion.ItemEstilo, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ItemDescripcion.Descripcion, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ItemDescripcion.Descripcion, new { htmlAttributes = new { @class = "form-control nuevo_item", @onkeyup = "InputToUpper(this);" } })
                    @Html.ValidationMessageFor(model => model.ItemDescripcion.Descripcion, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <br />
                    <button type="button" class="btn btn-success" id="nuevoEstilo" data-toggle="modal">
                        <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Agregar Estilo
                    </button>
                </div>
            </div>
        </div>

        <div class="container-fluid">
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.CatColores.CodigoColor, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CatColores.CodigoColor, new { htmlAttributes = new { @class = "form-control nuevo_item", @onkeyup = "InputToUpper(this);" } })
                    @Html.ValidationMessageFor(model => model.CatColores.CodigoColor, "", new { @class = "text-danger" })

                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.CatColores.DescripcionColor, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CatColores.DescripcionColor, new { htmlAttributes = new { @class = "form-control nuevo_item", @onkeyup = "InputToUpper(this);" } })
                    @Html.ValidationMessageFor(model => model.CatColores.DescripcionColor, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <br />

                    <button type="button" class="btn btn-success" id="nuevoColor" data-toggle="modal">
                        <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Agregar Color
                    </button>

                </div>
            </div>
        </div>


        <div class="container-fluid">
            <div class="form-row">

                <div class="form-group col-sm-4">
                    @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control nuevo_item" } })
                    @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-sm-4">
                    @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control nuevo_item" } })
                    @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })

                </div>

            </div>
        </div>
        <div class="container-fluid">
            <div class="form-row">
                <div class="form-group col-sm-4 estilo">
                    @Html.LabelFor(model => model.IdGenero, htmlAttributes: new { @class = "control-label " }) <br />
                    @Html.DropDownList("listGenero", (SelectList)ViewBag.listGenero, string.Empty, new { @class = "form-control nuevo_item", @id = "selectGenero", @name = "state", @style = "width: 80%;" })
                    @Html.ValidationMessageFor(model => model.IdGenero, "", new { @class = "text-danger" })

                </div>
                <div class="form-group col-sm-4">
                    @Html.LabelFor(model => model.IdTela, htmlAttributes: new { @class = "control-label " }) <br />
                    @Html.DropDownList("listTela", (SelectList)ViewBag.listTela, string.Empty, new { @class = "form-control nuevo_item", @id = "selectTela", @name = "state", @style = "width: 80%;" })
                    @Html.ValidationMessageFor(model => model.IdTela, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-sm-4">
                    @Html.LabelFor(model => model.TipoCamiseta, htmlAttributes: new { @class = "control-label " }) <br />
                    @Html.DropDownList("listTipoCamiseta", (SelectList)ViewBag.listTipoCamiseta, string.Empty, new { @class = "form-control nuevo_item", @id = "selectTipoCamiseta", @name = "state", @style = "width: 80%;" })
                    @Html.ValidationMessageFor(model => model.TipoCamiseta, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group">
                <br />
                <div class="text-center margin-bottom col-sm-12">
                    <button type="button" class="btn btn-success" id="nuevoItem" data-toggle="modal">
                        <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Guardar Item
                    </button>
                </div>
            </div>
        </div>

    </div>
    <input type="text" id="f-talla" class="form-control" />
    <div class="panel panel-default" id="crearTallas">
        <div class="panel-heading">
            <h4>Recepci&oacute;n de Tallas</h4>
        </div>

        <div class="container-fluid">
            <br />

            <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">+ Otra Talla</button>
            <div id="listaTalla"></div>
            <button type="button" id="nuevaTalla" class="btn btn-success btn-md pull-right btn-sm">Guardar Tallas</button>
            <br />
            <br />
        </div>
    </div>
    <br />
    <br />
    <br />

</div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
